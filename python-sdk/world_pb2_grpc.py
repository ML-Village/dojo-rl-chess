# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import world_pb2 as world__pb2

GRPC_GENERATED_VERSION = '1.65.4'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.66.0'
SCHEDULED_RELEASE_DATE = 'August 6, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in world_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class WorldStub(object):
    """The World service provides information about the world.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.WorldMetadata = channel.unary_unary(
                '/world.World/WorldMetadata',
                request_serializer=world__pb2.MetadataRequest.SerializeToString,
                response_deserializer=world__pb2.MetadataResponse.FromString,
                _registered_method=True)
        self.SubscribeModels = channel.unary_stream(
                '/world.World/SubscribeModels',
                request_serializer=world__pb2.SubscribeModelsRequest.SerializeToString,
                response_deserializer=world__pb2.SubscribeModelsResponse.FromString,
                _registered_method=True)
        self.SubscribeEntities = channel.unary_stream(
                '/world.World/SubscribeEntities',
                request_serializer=world__pb2.SubscribeEntitiesRequest.SerializeToString,
                response_deserializer=world__pb2.SubscribeEntityResponse.FromString,
                _registered_method=True)
        self.UpdateEntitiesSubscription = channel.unary_unary(
                '/world.World/UpdateEntitiesSubscription',
                request_serializer=world__pb2.UpdateEntitiesSubscriptionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.RetrieveEntities = channel.unary_unary(
                '/world.World/RetrieveEntities',
                request_serializer=world__pb2.RetrieveEntitiesRequest.SerializeToString,
                response_deserializer=world__pb2.RetrieveEntitiesResponse.FromString,
                _registered_method=True)
        self.SubscribeEventMessages = channel.unary_stream(
                '/world.World/SubscribeEventMessages',
                request_serializer=world__pb2.SubscribeEntitiesRequest.SerializeToString,
                response_deserializer=world__pb2.SubscribeEntityResponse.FromString,
                _registered_method=True)
        self.UpdateEventMessagesSubscription = channel.unary_unary(
                '/world.World/UpdateEventMessagesSubscription',
                request_serializer=world__pb2.UpdateEntitiesSubscriptionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.RetrieveEventMessages = channel.unary_unary(
                '/world.World/RetrieveEventMessages',
                request_serializer=world__pb2.RetrieveEntitiesRequest.SerializeToString,
                response_deserializer=world__pb2.RetrieveEntitiesResponse.FromString,
                _registered_method=True)
        self.RetrieveEvents = channel.unary_unary(
                '/world.World/RetrieveEvents',
                request_serializer=world__pb2.RetrieveEventsRequest.SerializeToString,
                response_deserializer=world__pb2.RetrieveEventsResponse.FromString,
                _registered_method=True)
        self.SubscribeEvents = channel.unary_stream(
                '/world.World/SubscribeEvents',
                request_serializer=world__pb2.SubscribeEventsRequest.SerializeToString,
                response_deserializer=world__pb2.SubscribeEventsResponse.FromString,
                _registered_method=True)


class WorldServicer(object):
    """The World service provides information about the world.
    """

    def WorldMetadata(self, request, context):
        """Retrieves metadata about the World including all the registered components and systems.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeModels(self, request, context):
        """Subscribes to models updates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeEntities(self, request, context):
        """Subscribe to entity updates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEntitiesSubscription(self, request, context):
        """Update entity subscription
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveEntities(self, request, context):
        """Retrieve entities
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeEventMessages(self, request, context):
        """Subscribe to entity updates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEventMessagesSubscription(self, request, context):
        """Update entity subscription
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveEventMessages(self, request, context):
        """Retrieve entities
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveEvents(self, request, context):
        """Retrieve events
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeEvents(self, request, context):
        """Subscribe to events
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorldServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'WorldMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.WorldMetadata,
                    request_deserializer=world__pb2.MetadataRequest.FromString,
                    response_serializer=world__pb2.MetadataResponse.SerializeToString,
            ),
            'SubscribeModels': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeModels,
                    request_deserializer=world__pb2.SubscribeModelsRequest.FromString,
                    response_serializer=world__pb2.SubscribeModelsResponse.SerializeToString,
            ),
            'SubscribeEntities': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeEntities,
                    request_deserializer=world__pb2.SubscribeEntitiesRequest.FromString,
                    response_serializer=world__pb2.SubscribeEntityResponse.SerializeToString,
            ),
            'UpdateEntitiesSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEntitiesSubscription,
                    request_deserializer=world__pb2.UpdateEntitiesSubscriptionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RetrieveEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveEntities,
                    request_deserializer=world__pb2.RetrieveEntitiesRequest.FromString,
                    response_serializer=world__pb2.RetrieveEntitiesResponse.SerializeToString,
            ),
            'SubscribeEventMessages': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeEventMessages,
                    request_deserializer=world__pb2.SubscribeEntitiesRequest.FromString,
                    response_serializer=world__pb2.SubscribeEntityResponse.SerializeToString,
            ),
            'UpdateEventMessagesSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEventMessagesSubscription,
                    request_deserializer=world__pb2.UpdateEntitiesSubscriptionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RetrieveEventMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveEventMessages,
                    request_deserializer=world__pb2.RetrieveEntitiesRequest.FromString,
                    response_serializer=world__pb2.RetrieveEntitiesResponse.SerializeToString,
            ),
            'RetrieveEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveEvents,
                    request_deserializer=world__pb2.RetrieveEventsRequest.FromString,
                    response_serializer=world__pb2.RetrieveEventsResponse.SerializeToString,
            ),
            'SubscribeEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeEvents,
                    request_deserializer=world__pb2.SubscribeEventsRequest.FromString,
                    response_serializer=world__pb2.SubscribeEventsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'world.World', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('world.World', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class World(object):
    """The World service provides information about the world.
    """

    @staticmethod
    def WorldMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/world.World/WorldMetadata',
            world__pb2.MetadataRequest.SerializeToString,
            world__pb2.MetadataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/world.World/SubscribeModels',
            world__pb2.SubscribeModelsRequest.SerializeToString,
            world__pb2.SubscribeModelsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/world.World/SubscribeEntities',
            world__pb2.SubscribeEntitiesRequest.SerializeToString,
            world__pb2.SubscribeEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateEntitiesSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/world.World/UpdateEntitiesSubscription',
            world__pb2.UpdateEntitiesSubscriptionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RetrieveEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/world.World/RetrieveEntities',
            world__pb2.RetrieveEntitiesRequest.SerializeToString,
            world__pb2.RetrieveEntitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeEventMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/world.World/SubscribeEventMessages',
            world__pb2.SubscribeEntitiesRequest.SerializeToString,
            world__pb2.SubscribeEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateEventMessagesSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/world.World/UpdateEventMessagesSubscription',
            world__pb2.UpdateEntitiesSubscriptionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RetrieveEventMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/world.World/RetrieveEventMessages',
            world__pb2.RetrieveEntitiesRequest.SerializeToString,
            world__pb2.RetrieveEntitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RetrieveEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/world.World/RetrieveEvents',
            world__pb2.RetrieveEventsRequest.SerializeToString,
            world__pb2.RetrieveEventsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/world.World/SubscribeEvents',
            world__pb2.SubscribeEventsRequest.SerializeToString,
            world__pb2.SubscribeEventsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
